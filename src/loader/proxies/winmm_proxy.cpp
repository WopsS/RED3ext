#include "winmm_proxy.hpp"
#include "winmm_proxy_functions.hpp"

std::wstring_view red3ext::winmm_proxy::name() const noexcept
{
    return L"winmm";
}

void red3ext::winmm_proxy::load_exports(HMODULE module) const
{
    close_driver = get_proc_address<close_driver_type>(module, "CloseDriverr");
    open_driver = get_proc_address<open_driver_type>(module, "OpenDriver");
    send_driver_message = get_proc_address<send_driver_message_type>(module, "SendDriverMessage");
    drv_get_module_handle = get_proc_address<drv_get_module_handle_type>(module, "DrvGetModuleHandle");
    get_driver_module_handle = get_proc_address<get_driver_module_handle_type>(module, "GetDriverModuleHandle");
    def_driver_proc = get_proc_address<def_driver_proc_type>(module, "DefDriverProc");
    driver_callback = get_proc_address<driver_callback_type>(module, "DriverCallback");
    play_sound = get_proc_address<play_sound_type>(module, "PlaySoundA");
    play_sound_a = get_proc_address<play_sound_a_type>(module, "PlaySoundA");
    play_sound_w = get_proc_address<play_sound_w_type>(module, "PlaySoundW");
    aux_get_num_devs = get_proc_address<aux_get_num_devs_type>(module, "auxGetNumDevs");
    aux_get_dev_caps_a = get_proc_address<aux_get_dev_caps_a_type>(module, "auxGetDevCapsA");
    aux_get_dev_caps_w = get_proc_address<aux_get_dev_caps_w_type>(module, "auxGetDevCapsW");
    aux_set_volume = get_proc_address<aux_set_volume_type>(module, "auxSetVolume");
    aux_get_volume = get_proc_address<aux_get_volume_type>(module, "auxGetVolume");
    aux_out_message = get_proc_address<aux_out_message_type>(module, "auxOutMessage");
    joy_get_pos = get_proc_address<joy_get_pos_type>(module, "joyGetPos");
    joy_get_threshold = get_proc_address<joy_get_threshold_type>(module, "joyGetThreshold");
    joy_release_capture = get_proc_address<joy_release_capture_type>(module, "joyReleaseCapture");
    joy_set_capture = get_proc_address<joy_set_capture_type>(module, "joySetCapture");
    joy_set_threshold = get_proc_address<joy_set_threshold_type>(module, "joySetThreshold");
    joy_config_changed = get_proc_address<joy_config_changed_type>(module, "joyConfigChanged");
    joy_get_pos_ex = get_proc_address<joy_get_pos_ex_type>(module, "joyGetPosEx");
    joy_get_num_devs = get_proc_address<joy_get_num_devs_type>(module, "joyGetNumDevs");
    joy_get_dev_caps_a = get_proc_address<joy_get_dev_caps_a_type>(module, "joyGetDevCapsA");
    joy_get_dev_caps_w = get_proc_address<joy_get_dev_caps_w_type>(module, "joyGetDevCapsW");
    mci_send_command_a = get_proc_address<mci_send_command_a_type>(module, "mciSendCommandA");
    mci_send_command_w = get_proc_address<mci_send_command_w_type>(module, "mciSendCommandW");
    mci_send_string_a = get_proc_address<mci_send_string_a_type>(module, "mciSendStringA");
    mci_send_string_w = get_proc_address<mci_send_string_w_type>(module, "mciSendStringW");
    mci_get_device_id_a = get_proc_address<mci_get_device_id_a_type>(module, "mciGetDeviceIDA");
    mci_get_device_id_w = get_proc_address<mci_get_device_id_w_type>(module, "mciGetDeviceIDW");
    mci_get_device_id_from_element_id_a =
        get_proc_address<mci_get_device_id_from_element_id_a_type>(module, "mciGetDeviceIDFromElementIDA");
    mci_get_device_id_from_element_id_w =
        get_proc_address<mci_get_device_id_from_element_id_w_type>(module, "mciGetDeviceIDFromElementIDW");
    mci_get_error_string_a = get_proc_address<mci_get_error_string_a_type>(module, "mciGetErrorStringA");
    mci_get_error_string_w = get_proc_address<mci_get_error_string_w_type>(module, "mciGetErrorStringW");
    mci_set_yield_proc = get_proc_address<mci_set_yield_proc_type>(module, "mciSetYieldProc");
    mci_get_creator_task = get_proc_address<mci_get_creator_task_type>(module, "mciGetCreatorTask");
    mci_get_yield_proc = get_proc_address<mci_get_yield_proc_type>(module, "mciGetYieldProc");
    mci_get_driver_data = get_proc_address<mci_get_driver_data_type>(module, "mciGetDriverData");
    mci_load_command_resource = get_proc_address<mci_load_command_resource_type>(module, "mciLoadCommandResource");
    mci_set_driver_data = get_proc_address<mci_set_driver_data_type>(module, "mciSetDriverData");
    mci_driver_yield = get_proc_address<mci_driver_yield_type>(module, "mciDriverYield");
    mci_driver_notify = get_proc_address<mci_driver_notify_type>(module, "mciDriverNotify");
    mci_free_command_resource = get_proc_address<mci_free_command_resource_type>(module, "mciFreeCommandResource");
    midi_out_get_num_devs = get_proc_address<midi_out_get_num_devs_type>(module, "midiOutGetNumDevs");
    midi_stream_open = get_proc_address<midi_stream_open_type>(module, "midiStreamOpen");
    midi_stream_close = get_proc_address<midi_stream_close_type>(module, "midiStreamClose");
    midi_stream_property = get_proc_address<midi_stream_property_type>(module, "midiStreamProperty");
    midi_stream_position = get_proc_address<midi_stream_position_type>(module, "midiStreamPosition");
    midi_stream_out = get_proc_address<midi_stream_out_type>(module, "midiStreamOut");
    midi_stream_pause = get_proc_address<midi_stream_pause_type>(module, "midiStreamPause");
    midi_stream_restart = get_proc_address<midi_stream_restart_type>(module, "midiStreamRestart");
    midi_stream_stop = get_proc_address<midi_stream_stop_type>(module, "midiStreamStop");
    midi_connect = get_proc_address<midi_connect_type>(module, "midiConnect");
    midi_disconnect = get_proc_address<midi_disconnect_type>(module, "midiDisconnect");
    midi_out_get_dev_caps_a = get_proc_address<midi_out_get_dev_caps_a_type>(module, "midiOutGetDevCapsA");
    midi_out_get_dev_caps_w = get_proc_address<midi_out_get_dev_caps_w_type>(module, "midiOutGetDevCapsW");
    midi_out_get_volume = get_proc_address<midi_out_get_volume_type>(module, "midiOutGetVolume");
    midi_out_set_volume = get_proc_address<midi_out_set_volume_type>(module, "midiOutSetVolume");
    midi_out_get_error_text_a = get_proc_address<midi_out_get_error_text_a_type>(module, "midiOutGetErrorTextA");
    midi_out_get_error_text_w = get_proc_address<midi_out_get_error_text_w_type>(module, "midiOutGetErrorTextW");
    midi_out_open = get_proc_address<midi_out_open_type>(module, "midiOutOpen");
    midi_out_close = get_proc_address<midi_out_close_type>(module, "midiOutClose");
    midi_out_prepare_header = get_proc_address<midi_out_prepare_header_type>(module, "midiOutPrepareHeader");
    midi_out_unprepare_header = get_proc_address<midi_out_unprepare_header_type>(module, "midiOutUnprepareHeader");
    midi_out_short_msg = get_proc_address<midi_out_short_msg_type>(module, "midiOutShortMsg");
    midi_out_long_msg = get_proc_address<midi_out_long_msg_type>(module, "midiOutLongMsg");
    midi_out_reset = get_proc_address<midi_out_reset_type>(module, "midiOutReset");
    midi_out_cache_patches = get_proc_address<midi_out_cache_patches_type>(module, "midiOutCachePatches");
    midi_out_cache_drum_patches = get_proc_address<midi_out_cache_drum_patches_type>(module, "midiOutCacheDrumPatches");
    midi_out_get_id = get_proc_address<midi_out_get_id_type>(module, "midiOutGetID");
    midi_out_message = get_proc_address<midi_out_message_type>(module, "midiOutMessage");
    midi_in_get_num_devs = get_proc_address<midi_in_get_num_devs_type>(module, "midiInGetNumDevs");
    midi_in_get_dev_caps_a = get_proc_address<midi_in_get_dev_caps_a_type>(module, "midiInGetDevCapsA");
    midi_in_get_dev_caps_w = get_proc_address<midi_in_get_dev_caps_w_type>(module, "midiInGetDevCapsW");
    midi_in_get_error_text_a = get_proc_address<midi_in_get_error_text_a_type>(module, "midiInGetErrorTextA");
    midi_in_get_error_text_w = get_proc_address<midi_in_get_error_text_w_type>(module, "midiInGetErrorTextW");
    midi_in_open = get_proc_address<midi_in_open_type>(module, "midiInOpen");
    midi_in_close = get_proc_address<midi_in_close_type>(module, "midiInClose");
    midi_in_prepare_header = get_proc_address<midi_in_prepare_header_type>(module, "midiInPrepareHeader");
    midi_in_unprepare_header = get_proc_address<midi_in_unprepare_header_type>(module, "midiInUnprepareHeader");
    midi_in_add_buffer = get_proc_address<midi_in_add_buffer_type>(module, "midiInAddBuffer");
    midi_in_start = get_proc_address<midi_in_start_type>(module, "midiInStart");
    midi_in_stop = get_proc_address<midi_in_stop_type>(module, "midiInStop");
    midi_in_reset = get_proc_address<midi_in_reset_type>(module, "midiInReset");
    midi_in_get_id = get_proc_address<midi_in_get_id_type>(module, "midiInGetID");
    midi_in_message = get_proc_address<midi_in_message_type>(module, "midiInMessage");
    mixer_get_num_devs = get_proc_address<mixer_get_num_devs_type>(module, "mixerGetNumDevs");
    mixer_get_dev_caps_a = get_proc_address<mixer_get_dev_caps_a_type>(module, "mixerGetDevCapsA");
    mixer_get_dev_caps_w = get_proc_address<mixer_get_dev_caps_w_type>(module, "mixerGetDevCapsW");
    mixer_open = get_proc_address<mixer_open_type>(module, "mixerOpen");
    mixer_close = get_proc_address<mixer_close_type>(module, "mixerClose");
    mixer_message = get_proc_address<mixer_message_type>(module, "mixerMessage");
    mixer_get_line_info_a = get_proc_address<mixer_get_line_info_a_type>(module, "mixerGetLineInfoA");
    mixer_get_line_info_w = get_proc_address<mixer_get_line_info_w_type>(module, "mixerGetLineInfoW");
    mixer_get_id = get_proc_address<mixer_get_id_type>(module, "mixerGetID");
    mixer_get_line_controls_a = get_proc_address<mixer_get_line_controls_a_type>(module, "mixerGetLineControlsA");
    mixer_get_line_controls_w = get_proc_address<mixer_get_line_controls_w_type>(module, "mixerGetLineControlsW");
    mixer_get_control_details_a = get_proc_address<mixer_get_control_details_a_type>(module, "mixerGetControlDetailsA");
    mixer_get_control_details_w = get_proc_address<mixer_get_control_details_w_type>(module, "mixerGetControlDetailsW");
    mixer_set_control_details = get_proc_address<mixer_set_control_details_type>(module, "mixerSetControlDetails");
    mm_drv_install = get_proc_address<mm_drv_install_type>(module, "mmDrvInstall");
    mm_task_create = get_proc_address<mm_task_create_type>(module, "mmTaskCreate");
    mm_task_block = get_proc_address<mm_task_block_type>(module, "mmTaskBlock");
    mm_task_signal = get_proc_address<mm_task_signal_type>(module, "mmTaskSignal");
    mm_task_yield = get_proc_address<mm_task_yield_type>(module, "mmTaskYield");
    mm_get_current_task = get_proc_address<mm_get_current_task_type>(module, "mmGetCurrentTask");
    mmio_string_to_fourcc_a = get_proc_address<mmio_string_to_fourcc_a_type>(module, "mmioStringToFOURCCA");
    mmio_string_to_fourcc_w = get_proc_address<mmio_string_to_fourcc_w_type>(module, "mmioStringToFOURCCW");
    mmio_install_io_proc_a = get_proc_address<mmio_install_io_proc_a_type>(module, "mmioInstallIOProcA");
    mmio_install_io_proc_w = get_proc_address<mmio_install_io_proc_w_type>(module, "mmioInstallIOProcW");
    mmio_open_a = get_proc_address<mmio_open_a_type>(module, "mmioOpenA");
    mmio_open_w = get_proc_address<mmio_open_w_type>(module, "mmioOpenW");
    mmio_rename_a = get_proc_address<mmio_rename_a_type>(module, "mmioRenameA");
    mmio_rename_w = get_proc_address<mmio_rename_w_type>(module, "mmioRenameW");
    mmio_close = get_proc_address<mmio_close_type>(module, "mmioClose");
    mmio_read = get_proc_address<mmio_read_type>(module, "mmioRead");
    mmio_write = get_proc_address<mmio_write_type>(module, "mmioWrite");
    mmio_seek = get_proc_address<mmio_seek_type>(module, "mmioSeek");
    mmio_get_info = get_proc_address<mmio_get_info_type>(module, "mmioGetInfo");
    mmio_set_info = get_proc_address<mmio_set_info_type>(module, "mmioSetInfo");
    mmio_set_buffer = get_proc_address<mmio_set_buffer_type>(module, "mmioSetBuffer");
    mmio_flush = get_proc_address<mmio_flush_type>(module, "mmioFlush");
    mmio_advance = get_proc_address<mmio_advance_type>(module, "mmioAdvance");
    mmio_send_message = get_proc_address<mmio_send_message_type>(module, "mmioSendMessage");
    mmio_ascend = get_proc_address<mmio_ascend_type>(module, "mmioAscend");
    mmio_descend = get_proc_address<mmio_descend_type>(module, "mmioDescend");
    mmio_create_chunk = get_proc_address<mmio_create_chunk_type>(module, "mmioCreateChunk");
    snd_play_sound_a = get_proc_address<snd_play_sound_a_type>(module, "sndPlaySoundA");
    snd_play_sound_w = get_proc_address<snd_play_sound_w_type>(module, "sndPlaySoundW");
    time_get_system_time = get_proc_address<time_get_system_time_type>(module, "timeGetSystemTime");
    time_get_time = get_proc_address<time_get_time_type>(module, "timeGetTime");
    time_get_dev_caps = get_proc_address<time_get_dev_caps_type>(module, "timeGetDevCaps");
    time_begin_period = get_proc_address<time_begin_period_type>(module, "timeBeginPeriod");
    time_end_period = get_proc_address<time_end_period_type>(module, "timeEndPeriod");
    time_kill_event = get_proc_address<time_kill_event_type>(module, "timeKillEvent");
    time_set_event = get_proc_address<time_set_event_type>(module, "timeSetEvent");
    wave_out_get_num_devs = get_proc_address<wave_out_get_num_devs_type>(module, "waveOutGetNumDevs");
    wave_out_get_dev_caps_a = get_proc_address<wave_out_get_dev_caps_a_type>(module, "waveOutGetDevCapsA");
    wave_out_get_dev_caps_w = get_proc_address<wave_out_get_dev_caps_w_type>(module, "waveOutGetDevCapsW");
    wave_out_get_volume = get_proc_address<wave_out_get_volume_type>(module, "waveOutGetVolume");
    wave_out_set_volume = get_proc_address<wave_out_set_volume_type>(module, "waveOutSetVolume");
    wave_out_get_error_text_a = get_proc_address<wave_out_get_error_text_a_type>(module, "waveOutGetErrorTextA");
    wave_out_get_error_text_w = get_proc_address<wave_out_get_error_text_w_type>(module, "waveOutGetErrorTextW");
    wave_out_open = get_proc_address<wave_out_open_type>(module, "waveOutOpen");
    wave_out_close = get_proc_address<wave_out_close_type>(module, "waveOutClose");
    wave_out_prepare_header = get_proc_address<wave_out_prepare_header_type>(module, "waveOutPrepareHeader");
    wave_out_unprepare_header = get_proc_address<wave_out_unprepare_header_type>(module, "waveOutUnprepareHeader");
    wave_out_write = get_proc_address<wave_out_write_type>(module, "waveOutWrite");
    wave_out_pause = get_proc_address<wave_out_pause_type>(module, "waveOutPause");
    wave_out_restart = get_proc_address<wave_out_restart_type>(module, "waveOutRestart");
    wave_out_reset = get_proc_address<wave_out_reset_type>(module, "waveOutReset");
    wave_out_break_loop = get_proc_address<wave_out_break_loop_type>(module, "waveOutBreakLoop");
    wave_out_get_position = get_proc_address<wave_out_get_position_type>(module, "waveOutGetPosition");
    wave_out_get_pitch = get_proc_address<wave_out_get_pitch_type>(module, "waveOutGetPitch");
    wave_out_set_pitch = get_proc_address<wave_out_set_pitch_type>(module, "waveOutSetPitch");
    wave_out_get_playback_rate = get_proc_address<wave_out_get_playback_rate_type>(module, "waveOutGetPlaybackRate");
    wave_out_set_playback_rate = get_proc_address<wave_out_set_playback_rate_type>(module, "waveOutSetPlaybackRate");
    wave_out_get_id = get_proc_address<wave_out_get_id_type>(module, "waveOutGetID");
    wave_out_message = get_proc_address<wave_out_message_type>(module, "waveOutMessage");
    wave_in_get_num_devs = get_proc_address<wave_in_get_num_devs_type>(module, "waveInGetNumDevs");
    wave_in_get_dev_caps_a = get_proc_address<wave_in_get_dev_caps_a_type>(module, "waveInGetDevCapsA");
    wave_in_get_dev_caps_w = get_proc_address<wave_in_get_dev_caps_w_type>(module, "waveInGetDevCapsW");
    wave_in_get_error_text_a = get_proc_address<wave_in_get_error_text_a_type>(module, "waveInGetErrorTextA");
    wave_in_get_error_text_w = get_proc_address<wave_in_get_error_text_w_type>(module, "waveInGetErrorTextW");
    wave_in_open = get_proc_address<wave_in_open_type>(module, "waveInOpen");
    wave_in_close = get_proc_address<wave_in_close_type>(module, "waveInClose");
    wave_in_prepare_header = get_proc_address<wave_in_prepare_header_type>(module, "waveInPrepareHeader");
    wave_in_unprepare_header = get_proc_address<wave_in_unprepare_header_type>(module, "waveInUnprepareHeader");
    wave_in_add_buffer = get_proc_address<wave_in_add_buffer_type>(module, "waveInAddBuffer");
    wave_in_start = get_proc_address<wave_in_start_type>(module, "waveInStart");
    wave_in_stop = get_proc_address<wave_in_stop_type>(module, "waveInStop");
    wave_in_reset = get_proc_address<wave_in_reset_type>(module, "waveInReset");
    wave_in_get_position = get_proc_address<wave_in_get_position_type>(module, "waveInGetPosition");
    wave_in_get_id = get_proc_address<wave_in_get_id_type>(module, "waveInGetID");
    wave_in_message = get_proc_address<wave_in_message_type>(module, "waveInMessage");

    wow_app_exit = get_proc_address<wow_app_exit_type>(module, "WOWAppExit");
    mci_execute = get_proc_address<mci_execute_type>(module, "mciExecute");
    mmsystem_get_version = get_proc_address<mmsystem_get_version_type>(module, "mmsystemGetVersion");
    play_sound_stub = get_proc_address<play_sound_stub_type>(module, "PlaySoundStub");
}
